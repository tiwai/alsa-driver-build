--- ../alsa-kernel/core/sound.c	2015-02-03 17:57:48.504745673 +0100
+++ sound.c	2015-02-04 16:11:09.643227209 +0100
@@ -1,3 +1,4 @@
+#include "adriver.h"
 /*
  *  Advanced Linux Sound Architecture
  *  Copyright (c) by Jaroslav Kysela <perex@perex.cz>
@@ -149,6 +150,15 @@
 #define autoload_device(minor)	NULL
 #endif /* CONFIG_MODULES */
 
+#ifndef replace_fops
+#define replace_fops(f, fops) \
+	do {	\
+		struct file *__file = (f); \
+		fops_put(__file->f_op); \
+		BUG_ON(!(__file->f_op = (fops))); \
+	} while(0)
+#endif
+
 static int snd_open(struct inode *inode, struct file *file)
 {
 	unsigned int minor = iminor(inode);
@@ -415,6 +425,19 @@
  *  INIT PART
  */
 
+#ifdef CONFIG_SND_DEBUG_MEMORY
+extern void snd_memory_done(void);
+#else
+#define snd_memory_done()
+#endif
+#if defined(CONFIG_SND_DEBUG_MEMORY) && defined(CONFIG_PROC_FS)
+extern int snd_memory_info_init(void);
+extern void snd_memory_info_done(void);
+#else
+#define snd_memory_info_init()
+#define snd_memory_info_done()
+#endif
+
 static int __init alsa_sound_init(void)
 {
 	snd_major = major;
@@ -425,8 +448,10 @@
 	}
 	if (snd_info_init() < 0) {
 		unregister_chrdev(major, "alsa");
+		snd_memory_done();
 		return -ENOMEM;
 	}
+	snd_memory_info_init();
 	snd_info_minor_register();
 #ifndef MODULE
 	pr_info("Advanced Linux Sound Architecture Driver Initialized.\n");
@@ -437,9 +462,13 @@
 static void __exit alsa_sound_exit(void)
 {
 	snd_info_minor_unregister();
+	snd_memory_info_done();
 	snd_info_done();
 	unregister_chrdev(major, "alsa");
+	snd_memory_done();
 }
 
 subsys_initcall(alsa_sound_init);
 module_exit(alsa_sound_exit);
+
+#include "sound.inc"
